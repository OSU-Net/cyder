# Copy to local.py.
import sys
import os


SASS_BIN = '/usr/local/bin/sass'

DEV = True
DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

#INSTALLED_APPS += (
#    'debug_toolbar',
#)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'cyder.middleware.dev_authentication.DevAuthenticationMiddleware',
    'reversion.middleware.RevisionMiddleware',
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '',
        'OPTIONS': {
            'init_command': 'SET storage_engine=InnoDB',
            'charset' : 'utf8',
            'use_unicode' : True,
        },
        'TEST_CHARSET': 'utf8',
        'TEST_COLLATION': 'utf8_general_ci',
    },
    # 'slave': {
    #     ...
    # },
}

MIGRATION_HOST=''
MIGRATION_USER=''
MIGRATION_PASSWD=''
MIGRATION_DB=''

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

REMOTE_LOGINS_ON = True

SYSADMINS = (
                'you@domain.com',
            )

BUILD_TEAM = (
                'you@domain.com',
              )

SERVICES_URL = SITE_URL = STATIC_URL = 'http://localhost:8000/'

WIKI_USER = ''
WIKI_PASSWORD = ''

USE_LDAP = False
if USE_LDAP:
    LDAP_HOST = 'localhost'
    LDAP_USER = ''
    LDAP_PASS = ''
BUG_URL = ''
#import mysite.monitor
#mysite.monitor.start(interval=1.0)
# Specify your custom test runner to use
#TEST_RUNNER='test_runner_with_coverage'

 # List of modules to enable for code coverage
#COVERAGE_MODULES = ['api.views']
#TEST_RUNNER = 'django_coverage.coverage_runner.CoverageRunner'
USER_SYSTEM_ALLOWED_DELETE = ('')

TEMPLATE_DIRS = (
)

import logging
error = dict(level=logging.ERROR)
info = dict(level=logging.INFO)
debug = dict(level=logging.DEBUG)

LOGGING = {
    'loggers': {
        'product_details': error,
        'nose.plugins.manager': error,
        'django.db.backends': error,
        'elasticsearch': info,
        'inventory': debug,
    },
}

# CACHE_BACKEND = 'memcached://127.0.0.1:11211/'
API_ACCESS = ('GET','POST','PUT','DELETE')
SCRIPT_URL = 'https://localhost.com'
DESKTOP_EMAIL_ADDRESS = 'desktop@example.com'
FROM_EMAIL_ADDRESS = 'inventory@example.com'
DHCP_CONFIG_OUTPUT_DIRECTORY = '/data/dhcpconfig-autodeploy'
UNAUTHORIZED_EMAIL_ADDRESS = ('manager@example.com')

def custom_show_toolbar(request):
    # Always show toolbar, for example purposes only.
    return True
DEBUG_TOOLBAR_PANELS = (
    'debug_toolbar.panels.version.VersionDebugPanel',
    'debug_toolbar.panels.timer.TimerDebugPanel',
    'debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel',
    'debug_toolbar.panels.headers.HeaderDebugPanel',
    'debug_toolbar.panels.request_vars.RequestVarsDebugPanel',
    'debug_toolbar.panels.template.TemplateDebugPanel',
    'debug_toolbar.panels.sql.SQLDebugPanel',
    'debug_toolbar.panels.signals.SignalDebugPanel',
    'debug_toolbar.panels.logger.LoggingPanel',
)
DEBUG_TOOLBAR_CONFIG = {
    'INTERCEPT_REDIRECTS': False,
    'SHOW_TOOLBAR_CALLBACK': custom_show_toolbar,
    'HIDE_DJANGO_SQL': False,
    'TAG': 'div',
    'ENABLE_STACKTRACES' : True,
}

MIGRATION_USER = ''
MIGRATION_PASSWD = ''
MIGRATION_DB = ''
MIGRATION_HOST = ''
