Char = :c ?(c not in [';' , ' ', '\t'])
OptionValueChar = :c ?(c is not ';')
FQDN = < Char* >
IP = OptionKey:ip ?( is_ip.match(ip) ) -> ip
MAC = OptionKey:mac ?( is_mac.match(mac) ) -> mac
OptionKey = < Char* >
OptionValue = < OptionValueChar* >
ParameterKey = OptionKey:p ?(p not in ['deny', 'allow', 'option',
                                       'range', 'fixed-address',
                                       'hardware ethernet'])
        -> p

Option :scope = ws 'option' ws OptionKey:option_key ws OptionValue:option_value ';'
        -> Option(key=option_key, value=option_value, scope=scope)

Parameter :scope = ws ParameterKey:param_key ws OptionValue:param_value ';'
        -> Parameter(key=param_key, value=param_value, scope=scope)

FixedAddress = ws 'fixed-address' ws IP:ip ';'
        -> {'ip' : ip}

HardwareAddress = ws 'hardware ethernet' ws MAC:mac ';'
        -> {'mac': mac}

HostAttributes = Option(HOST) | HardwareAddress | FixedAddress | Parameter(HOST)

Host = ws 'host' ws FQDN:fqdn ws '{' HostAttributes*:attrs ws '}'
        -> Host(**prepare_arguments(attrs, fqdn=fqdn, exclude_list=['mac', 'fqdn']))

Range = ws 'range' ws IP:start ws IP:end ';'
        -> {'start': start, 'end': end}

Allow = ws 'allow' ws OptionValue:allow ';'
        -> Allow(allow)

Deny = ws 'deny' ws OptionValue:deny ';'
        -> Deny(deny)

PoolAttrs = Option | Allow | Parameter | Range | Deny

Pool = ws 'pool' ws '{' PoolAttrs*:attrs ws '}'
        -> Pool(**prepare_arguments(attrs, exclude_list=['start', 'end']))

SubnetAttrs = Option | Pool | Parameter

Subnet = ws 'subnet' ws IP:network_addr ws 'netmask' ws IP:netmask_addr ws '{'
            SubnetAttrs*:attrs ws
        '}'
        -> Subnet(**prepare_arguments(attrs,
                  **{'netmask_addr': netmask_addr,
                     'network_addr': network_addr}))

GroupAttrs = NestedGroup | Host | Option | Parameter

Group = ws 'group' ws '{' GroupAttrs*:attrs ws '}'
        -> Group(**prepare_arguments(attrs))

NestedGroup = Group:grp -> {'grp' : grp}
